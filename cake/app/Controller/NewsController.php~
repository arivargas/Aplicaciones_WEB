<?php
App::uses('AppController', 'Controller');
/**
 * News Controller
 *
 * @property News $News
 */
class NewsController extends AppController {

	var $components = array('RequestHandler');
	var $helpers = array('Text');

/**
 * index method
 *
 * @return void
 */
	public function index() {
	     if( $this->RequestHandler->isRss() ){
		 $news = $this->New->find('all', array('limit' => 20, 'order' => 'New.created DESC'));
		 return $this->set(compact('news'));
	     }
 	    // this is not an Rss request, so deliver data used by website's interface
	    $this->New->recursive = 0;
	    $this->paginate = array('New', array('order' => 'New.created DESC', 'limit' => 10));
	    $this->set('news', $this->paginate());
	}


/**
 * view method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function view($id = null) {
		$this->New->id = $id;
		if (!$this->New->exists()) {
			throw new NotFoundException(__('Invalid new'));
		}
		$this->set('new', $this->New->read(null, $id));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->New->create();
			if ($this->New->save($this->request->data)) {
				$this->Session->setFlash(__('The new has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The new could not be saved. Please, try again.'));
			}
		}
		$courses = $this->New->Course->find('list');
		$this->set(compact('courses'));
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function edit($id = null) {
		$this->New->id = $id;
		if (!$this->New->exists()) {
			throw new NotFoundException(__('Invalid new'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->New->save($this->request->data)) {
				$this->Session->setFlash(__('The new has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The new could not be saved. Please, try again.'));
			}
		} else {
			$this->request->data = $this->New->read(null, $id);
		}
		$courses = $this->New->Course->find('list');
		$this->set(compact('courses'));
	}

/**
 * delete method
 *
 * @throws MethodNotAllowedException
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function delete($id = null) {
		if (!$this->request->is('post')) {
			throw new MethodNotAllowedException();
		}
		$this->New->id = $id;
		if (!$this->New->exists()) {
			throw new NotFoundException(__('Invalid new'));
		}
		if ($this->New->delete()) {
			$this->Session->setFlash(__('New deleted'));
			$this->redirect(array('action' => 'index'));
		}
		$this->Session->setFlash(__('New was not deleted'));
		$this->redirect(array('action' => 'index'));
	}

}
